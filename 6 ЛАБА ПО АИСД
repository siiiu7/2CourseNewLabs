'''
Лабораторная работа №6
Задание состоит из двух частей. 
1 часть – написать программу в соответствии со своим вариантом задания.
2 часть – усложнить написанную программу, введя по своему усмотрению в условие минимум одно ограничение на характеристики объектов и целевую функцию для оптимизации решения.

Вариант 24. У няни неограниченное количество  фруктов К разных названий (ф1,…фК). 
Сформировать (вывести) все возможные варианты меню полдника (1 фрукт) для ребенка на неделю. 
'''
'''
Лабораторная работа №6
Задание состоит из двух частей.
1 часть – написать программу в соответствии со своим вариантом задания.
2 часть – усложнить написанную программу, введя по своему усмотрению в условие минимум одно ограничение на характеристики объектов и целевую функцию для оптимизации решения.

Вариант 24. У няни неограниченное количество  фруктов К разных названий (ф1,…фК).
Сформировать (вывести) все возможные варианты меню полдника (1 фрукт) для ребенка на неделю.
'''
import random

def generate_combinations(fruits, combination_length, current_combination=[]):
    if len(current_combination) == combination_length:
        yield current_combination
    else:
        for fruit in fruits:
            if fruit not in current_combination:
                yield from generate_combinations(fruits, combination_length, current_combination + [fruit])

print('\nЧАСТЬ 1')
num_fruits = int(input('Введите количество доступных фруктов (больше 7): '))

while num_fruits <= 7:
    print('Извините, недостаточно фруктов для создания уникальных комбинаций на каждый день.')
    num_fruits = int(input('Введите количество доступных фруктов (больше 7): '))

fruits = [f'ф{i + 1}' for i in range(num_fruits)]
days = 7

fruit_combinations = list(generate_combinations(fruits, days))

for combination in fruit_combinations:
    print(*combination, sep='-')


print('\nЧАСТЬ 2')
print()

calories = {fruit: random.randint(50, 150) for fruit in fruits}
num_weeks = int(input('Введите число недель, на которые будет составлено меню: '))

for week in range(1, num_weeks + 1):
    while True:
        week_fruits = random.sample(fruits, days)
        week_fruits_tuple = tuple(sorted(week_fruits))
        if week_fruits_tuple not in fruit_combinations:
            fruit_combinations.append(week_fruits_tuple)
            break

    total_calories = sum(calories[fruit] for fruit in week_fruits)
    unique_fruits = set(week_fruits)

    print(f"\nМеню на {week} неделю:")
    for day, fruit in enumerate(week_fruits, start=1):
        print(f"День {day}: {fruit} ({calories[fruit]} ккал)")
    print(f"\nИтого за неделю: {total_calories} ккал")

    max_calories = max(calories[fruit] for fruit in week_fruits)
    max_calories_fruits = [fruit for fruit in week_fruits if calories[fruit] == max_calories]
    print(f"\nСамый калорийный фрукт на недели {week}: {', '.join(max_calories_fruits)} ({max_calories} ккал)")
