'''
Лабораторная работа № 12
Вариант 24
Вычислить сумму знакопеременного ряда |х*3n!|/(3n)!, где х-матрица ранга к (к и матрица задаются случайным образом),
n - номер слагаемого. Сумма считается вычисленной, если точность вычислений будет не меньше t знаков после запятой.
У алгоритма д.б. линейная сложность.
Операция умножения –поэлементная. Знак первого слагаемого  +.
'''

import random as ran
import numpy as np
import decimal as de

# Создание матрицы
k = ran.randint(2, 10)
x = np.random.uniform(-1, 1, (k, k))

# Ввод t
t = input("Введите число t от 1 до 100: ")

# Проверка t на правильность ввода
while True:
    if t.isdigit() and 1 <= int(t) <= 100:
        t = int(t)
        break
    else:
        t = input("Некорректный ввод t. Введите число t от 1 до 100: ")

n = 1  # номер слагаемого
factorial = 1  # факториал
sign = 1  # знак
result = de.Decimal(0)  # результат
matrix = x  # матрица
de.getcontext().prec = t + 60  # установка точности

while abs(result.as_tuple().exponent) < t:
    term = de.Decimal(np.prod(matrix) * factorial / (3 * n))  # вычисление слагаемого
    result += sign * term  # прибавление результата с учетом знака
    n += 1  # следующий номер слагаемого
    factorial *= (3 * n)  # новый факториал с учетом нового номера слагаемого
    sign = -sign  # изменение знака

print(x)  # вывод матрицы
print(f"Результат: {result:.{t}f}")  # вывод результата
