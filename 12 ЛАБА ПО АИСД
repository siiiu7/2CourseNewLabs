import random as ran  
import numpy as np  
import decimal as de  

# Создание матрицы
k = ran.randint(2, 10)  # Генерация случайного целого числа от 2 до 10 и присвоение его переменной k
x = np.random.uniform(-1, 1, (k, k))  # Генерация случайной матрицы размером kxk в диапазоне от -1 до 1

t = input("Введите число t от 1 до 100: ")  # Запрос у пользователя ввести число t от 1 до 100

# Проверка t на правильность ввода
while True:
    if t.isdigit() and 1 <= int(t) <= 100:  # Проверка, является ли введенное значение целым числом в нужном диапазоне
        t = int(t)  # Преобразование введенной строки в целое число
        break  # Прерывание цикла
    elif not t.isdigit():  # Если введенная строка не является целым числом
        t = input("t не является числом, введите его ещё раз: ")  
    elif int(t) < 1 or int(t) > 100:  # Если введенное число не попадает в нужный диапазон
        t = input("Число t меньше единицы или больше ста, введите его ещё раз: ") 

n = 1  # Инициализация переменной для номера слагаемого
n_factotial = 1  # Инициализация переменной факториала
znak = 1  # Инициализация переменной для знака
rezultat = de.Decimal(0)  # Инициализация переменной для результата как Decimal
matic = x  # Инициализация переменной случайной матрицы x
de.getcontext().prec = t + 60  # Установка точности для вычислений
fun = de.Decimal(0)  # Инициализация переменной fun в виде Decimal для вычисления

while abs(rezultat.as_tuple().exponent) < t:  # Цикл while, выполняемый, пока число знаков после запятой результата не будет больше числа t
    fun = de.Decimal(-1 * np.linalg.det(matic * 3 * n_factotial)) * de.Decimal((1 / 3 * n_factotial))  # Вычисление слагаемого
    rezultat = rezultat + (znak * fun)  # Прибавление результата с учетом знака
    n += 1  # Следующий номер слагаемого
    n_factotial *= n  # Вычисление факториала для числителя
    znak = -znak  # Смена знака для следующего слагаемого

print(x)  # Вывод матрицы
print(f"Результат: {rezultat:.{t}f}")  # Вывод результата с указанием числа знаков после запятой
