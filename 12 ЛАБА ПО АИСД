'''Лабораторная работа №12
Вариант 24
Вычислить сумму знакопеременного ряда |х*3n!|/(3n)!, где х-матрица ранга к (к и матрица задаются случайным образом), n - номер слагаемого. 
Сумма считается вычисленной, если точность вычислений будет не меньше t знаков после запятой. 
У алгоритма д.б. линейная сложность. Операция умножения –поэлементная. Знак первого слагаемого  +.
'''

import random as ran
import numpy as np
import decimal as de

# Создание матрицы
k = ran.randint(2,10)
x = np.random.uniform(-1, 1, (k, k))

# Ввод t
t = input("Введите число t от 1 до 100: ")

# Проверка t на правильность ввода
while True:
    if t.isdigit() == True and int(t) >1 and  int(t) <=100:
        t = int(t)
        break
    elif t.isdigit() != True:
        t = input("t не является числом, введите его ещё раз: ")
    elif int(t) < 1 or int(t) >100:
        t = input("Число t меньше единицы или больше ста, введите его ещё раз: ")

n = 0  # номер слагаемого
n_factotial = 1  # факториал
znak = 1  # знак
rezultat = de.Decimal(0)  # результат
matic = x  # матрица
de.getcontext().prec = t + 60  # установка точности
fun = de.Decimal(0)  # decimal для переменной

while abs(rezultat.as_tuple().exponent) < t:
    fun = abs(de.Decimal(n_factotial) * de.Decimal(np.math.pow(x, 3*n_factotial))/de.Decimal(np.math.factorial(3*n_factotial)))
    rezultat += (znak * fun)
    n += 1
    n_factotial += 1
    znak = -znak

print(x) # вывод матрицы
print(f"Результат: {rezultat:.{t}f}")
